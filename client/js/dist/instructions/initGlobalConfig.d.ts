/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type Codec, type Decoder, type Encoder, type IAccountMeta, type IAccountSignerMeta, type IInstruction, type IInstructionWithAccounts, type IInstructionWithData, type ReadonlyAccount, type ReadonlyUint8Array, type TransactionSigner, type WritableAccount, type WritableSignerAccount } from '@solana/kit';
import { PUMP_PROGRAM_ADDRESS } from '../programs';
export declare const INIT_GLOBAL_CONFIG_DISCRIMINATOR: Uint8Array<ArrayBuffer>;
export declare function getInitGlobalConfigDiscriminatorBytes(): ReadonlyUint8Array;
export type InitGlobalConfigInstruction<TProgram extends string = typeof PUMP_PROGRAM_ADDRESS, TAccountGlobalConfig extends string | IAccountMeta<string> = string, TAccountSigner extends string | IAccountMeta<string> = '52nvBaMXujpVYf6zBUvmQtHEZc4kAncRJccXG99F6yrg', TAccountSystemProgram extends string | IAccountMeta<string> = '11111111111111111111111111111111', TRemainingAccounts extends readonly IAccountMeta<string>[] = []> = IInstruction<TProgram> & IInstructionWithData<Uint8Array> & IInstructionWithAccounts<[
    TAccountGlobalConfig extends string ? WritableAccount<TAccountGlobalConfig> : TAccountGlobalConfig,
    TAccountSigner extends string ? WritableSignerAccount<TAccountSigner> & IAccountSignerMeta<TAccountSigner> : TAccountSigner,
    TAccountSystemProgram extends string ? ReadonlyAccount<TAccountSystemProgram> : TAccountSystemProgram,
    ...TRemainingAccounts
]>;
export type InitGlobalConfigInstructionData = {
    discriminator: ReadonlyUint8Array;
};
export type InitGlobalConfigInstructionDataArgs = {};
export declare function getInitGlobalConfigInstructionDataEncoder(): Encoder<InitGlobalConfigInstructionDataArgs>;
export declare function getInitGlobalConfigInstructionDataDecoder(): Decoder<InitGlobalConfigInstructionData>;
export declare function getInitGlobalConfigInstructionDataCodec(): Codec<InitGlobalConfigInstructionDataArgs, InitGlobalConfigInstructionData>;
export type InitGlobalConfigAsyncInput<TAccountGlobalConfig extends string = string, TAccountSigner extends string = string, TAccountSystemProgram extends string = string> = {
    globalConfig?: Address<TAccountGlobalConfig>;
    signer?: TransactionSigner<TAccountSigner>;
    systemProgram?: Address<TAccountSystemProgram>;
};
export declare function getInitGlobalConfigInstructionAsync<TAccountGlobalConfig extends string, TAccountSigner extends string, TAccountSystemProgram extends string, TProgramAddress extends Address = typeof PUMP_PROGRAM_ADDRESS>(input: InitGlobalConfigAsyncInput<TAccountGlobalConfig, TAccountSigner, TAccountSystemProgram>, config?: {
    programAddress?: TProgramAddress;
}): Promise<InitGlobalConfigInstruction<TProgramAddress, TAccountGlobalConfig, TAccountSigner, TAccountSystemProgram>>;
export type InitGlobalConfigInput<TAccountGlobalConfig extends string = string, TAccountSigner extends string = string, TAccountSystemProgram extends string = string> = {
    globalConfig: Address<TAccountGlobalConfig>;
    signer?: TransactionSigner<TAccountSigner>;
    systemProgram?: Address<TAccountSystemProgram>;
};
export declare function getInitGlobalConfigInstruction<TAccountGlobalConfig extends string, TAccountSigner extends string, TAccountSystemProgram extends string, TProgramAddress extends Address = typeof PUMP_PROGRAM_ADDRESS>(input: InitGlobalConfigInput<TAccountGlobalConfig, TAccountSigner, TAccountSystemProgram>, config?: {
    programAddress?: TProgramAddress;
}): InitGlobalConfigInstruction<TProgramAddress, TAccountGlobalConfig, TAccountSigner, TAccountSystemProgram>;
export type ParsedInitGlobalConfigInstruction<TProgram extends string = typeof PUMP_PROGRAM_ADDRESS, TAccountMetas extends readonly IAccountMeta[] = readonly IAccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        globalConfig: TAccountMetas[0];
        signer: TAccountMetas[1];
        systemProgram: TAccountMetas[2];
    };
    data: InitGlobalConfigInstructionData;
};
export declare function parseInitGlobalConfigInstruction<TProgram extends string, TAccountMetas extends readonly IAccountMeta[]>(instruction: IInstruction<TProgram> & IInstructionWithAccounts<TAccountMetas> & IInstructionWithData<Uint8Array>): ParsedInitGlobalConfigInstruction<TProgram, TAccountMetas>;
//# sourceMappingURL=initGlobalConfig.d.ts.map